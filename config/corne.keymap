/*
 * Copyright (c) 2020 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 *
 * Corne V3 QWERTZ Layout - Finale Version
 * Inklusive Key Position Defines, korrigierten Behaviors & Macros
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h> // Für &out

// Key Positions für Corne (0-41)
#define LEFT_POSITIONS  0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define RIGHT_POSITIONS 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41
/* Key Positions
╭────────────────────────╮ ╭────────────────────────╮
│  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
│ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
│ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
                  ╰────────────╯ ╰────────────╯
*/

// Layer-Definitionen für bessere Lesbarkeit
#define DEF 0 // Default Layer
#define SYM 1 // Symbol Layer
#define NAV 2 // Navigations-/Funktions-Layer
#define SYS 3 // System Layer

/ { // Start des Root-Node Overlays

    behaviors {
        // Double-tap Backspace für Wort löschen
        td_bspc: tap_dance_backspace {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };

        // Home Row Mods mit Positions-Trigger
        // Diese Behaviors erwarten ihre 'bindings' als Parameter aus dem Keymap-Aufruf
        hrml: home_row_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>; // Erwartet zwei Parameter: <hold_key>, <tap_key>
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced"; // Oder "tap-preferred" / "hold-preferred" je nach Vorliebe
            hold-trigger-key-positions = <RIGHT_POSITIONS>;
            // KEINE 'bindings = <...>, <...>;' Zeile hier!
        };

        hrmr: home_row_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>; // Erwartet zwei Parameter
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <LEFT_POSITIONS>;
            // KEINE 'bindings = <...>, <...>;' Zeile hier!
        };
        
        // Spezifische Layer-Tap Behaviors für Daumen
        lt_sym_space: layer_tap_sym_space { 
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <0>; // Fest definiert, keine Parameter aus Keymap
            tapping-term-ms = <250>; 
            quick-tap-ms = <150>;
            flavor = "hold-preferred"; // Layer-Zugriff hat Priorität
            bindings = <&mo SYM>, <&kp SPACE>; 
        };

        lt_nav_ret: layer_tap_nav_ret { 
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <0>; // Fest definiert
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "hold-preferred";
            bindings = <&mo NAV>, <&kp RET>;
        };
    }; // Ende behaviors

    macros {
        // Deine gewünschten Makros mit korrigierter bindings-Syntax
        m_sudo: macro_sudo { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp S>, <&kp U>, <&kp D>, <&kp O>, <&kp SPACE>; };
        m_cd: macro_cd { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp C>, <&kp D>, <&kp SPACE>; };
        m_ls: macro_ls { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp L>, <&kp S>, <&kp SPACE>, <&kp MINUS>, <&kp L>, <&kp A>, <&kp SPACE>; };
        m_git: macro_git { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp G>, <&kp I>, <&kp T>, <&kp SPACE>; };
        m_pipe: macro_pipe { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp SPACE>, <&kp PIPE>, <&kp SPACE>; };
        m_and: macro_and { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp SPACE>, <&kp AMPS>, <&kp AMPS>, <&kp SPACE>; };
        m_arrow: macro_arrow { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp MINUS>, <&kp GT>; };
        m_dquote: macro_dquote { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp DQT>, <&kp DQT>, <&kp LEFT>; };
        m_squote: macro_squote { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <10>; tap-ms = <10>; bindings = <&kp SQT>, <&kp SQT>, <&kp LEFT>; };
    }; // Ende macros

    combos {
        compatible = "zmk,combos";
        combo_sys_layer {
            timeout-ms = <50>;
            // Corne Tasten: 0-20 (links), 21-41 (rechts)
            // Annahme: Innere Daumentasten für Combo sind Position 20 (links) und 41 (rechts)
            key-positions = <20 41>; 
            bindings = <&to SYS>;
            layers = <DEF SYM NAV>; 
        };
    }; // Ende combos

    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0: QWERTZ Base mit Home Row Mods
            bindings = <
            // Linke Hälfte (Tasten 0-5, 6-11, 12-17, Daumen 18-20)                     // Rechte Hälfte (Tasten 21-26, 27-32, 33-38, Daumen 39-41)
            // Reihe oben: 0-5 links, 21-26 rechts
            &kp TAB      &kp Q            &kp W            &kp E            &kp R            &kp T            &kp Y            &kp U            &kp I            &kp O            &kp P            &td_bspc
            // Reihe mitte (home): 6-11 links, 27-32 rechts
            &kp LCTRL    &hrml LGUI A     &hrml LALT S     &hrml LCTRL D    &hrml LSHFT F    &kp G            &kp H            &hrmr RSHFT J    &hrmr RCTRL K    &hrmr RALT L     &hrmr RGUI O     &kp SQT  // O für Ö
            // Reihe unten: 12-17 links, 33-38 rechts
            &kp LSHFT    &kp Z            &kp X            &kp C            &kp V            &kp B            &kp N            &kp M            &kp COMMA        &kp DOT          &kp MINUS        &kp RSHFT
            // Daumen: 18-20 links, 39-41 rechts
                                          &kp LGUI         &lt_sym_space    &kp LALT                          &kp RCTRL        &lt_nav_ret      &kp RGUI
            >;
        };

        symbol_layer { // Layer 1 (SYM): Symbole & Zahlen
            bindings = <
            // Linke Hälfte                                                                // Rechte Hälfte
            &kp ESC      &kp N1           &kp N2           &kp N3           &kp N4           &kp N5           &kp N6           &kp N7           &kp N8           &kp N9           &kp N0           &kp PLUS
            &trans       &kp EXCL         &kp AT           &kp HASH         &kp DLLR         &kp PRCNT        &kp CARET        &kp AMPS         &kp ASTRK        &kp LPAR         &kp RPAR         &kp BSLH
            &trans       &kp TILDE        &kp GRAVE        &kp LC(Z)        &kp LC(X)        &kp LC(C)        &kp LBRC         &kp RBRC         &kp LBKT         &kp RBKT         &kp PIPE         &kp LC(V)
                                          &trans           &trans           &trans                            &trans           &trans           &trans
            >;
        };

        navigation_layer { // Layer 2 (NAV): Navigation, F-Tasten & Macros
            bindings = <
            // Linke Hälfte                                                                // Rechte Hälfte
            &kp F1       &kp F2           &kp F3           &kp F4           &kp F5           &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
            &trans       &m_sudo          &m_cd            &m_git           &m_ls            &m_pipe          &m_and           &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp DEL
            &trans       &m_squote        &m_dquote        &m_arrow         &trans           &trans           &m_arrow         &kp HOME         &kp PG_DN        &kp PG_UP        &kp END          &trans
                                          &trans           &trans           &trans                            &trans           &trans           &trans
            >;
        };

        system_layer { // Layer 3 (SYS): System-Funktionen (Bluetooth, Reset)
            bindings = <
            // Linke Hälfte                                                                // Rechte Hälfte
            &out OUT_USB  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans           &trans           &trans           &trans           &trans           &trans
            &trans        &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans
            &trans        &trans           &trans           &trans           &trans           &bt BT_CLR_ALL   &trans           &trans           &sys_reset       &bootloader      &trans           &trans // ACHTUNG: Reset!
                                          &trans           &trans           &trans                            &trans           &trans           &trans
            >;
        };
    }; // Ende keymap

}; // Ende des Root-Node Overlays / { ... }
